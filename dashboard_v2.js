// ===== Sacred Multiverse Dashboard v2 (v2.2 Upgrade) =====

// Firebase v9 Modular SDK
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.22.2/firebase-app.js";
import { getDatabase, ref, onValue } from "https://www.gstatic.com/firebasejs/9.22.2/firebase-database.js";

// --- Your Firebase Config ---
const firebaseConfig = {
Â Â Â Â apiKey: "YOUR_API_KEY",
Â Â Â Â authDomain: "sacredsystemmmo.firebaseapp.com",
Â Â Â Â databaseURL: "https://sacredsystemmmo-default-rtdb.firebaseio.com",
Â Â Â Â projectId: "sacredsystemmmo",
Â Â Â Â storageBucket: "sacredsystemmmo.appspot.com",
Â Â Â Â messagingSenderId: "YOUR_SENDER_ID",
Â Â Â Â appId: "YOUR_APP_ID"
};

// --- Initialize Firebase ---
const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

console.log("ðŸ”¥ Sacred Dashboard v2.2 Loaded");

// --- Select DOM Elements ---
const playersContainer = document.querySelector('.active-players');
const npcsContainer = document.querySelector('.active-npcs');
const raidsContainer = document.querySelector('.active-raids');
const logsContainer = document.querySelector('.sacred-logs');

// --- Fetch Active Players ---
function loadPlayers() {
Â Â Â Â const playersRef = ref(db, 'sacredSystem/players');

Â Â Â Â onValue(playersRef, (snapshot) => {
Â Â Â Â Â Â Â Â const players = snapshot.val();
Â Â Â Â Â Â Â Â playersContainer.innerHTML = "";

Â Â Â Â Â Â Â Â if (!players) {
Â Â Â Â Â Â Â Â Â Â Â Â playersContainer.innerHTML = `<p>No players online...</p>`;
Â Â Â Â Â Â Â Â Â Â Â Â return;
Â Â Â Â Â Â Â Â }

Â Â Â Â Â Â Â Â Object.keys(players).forEach(playerName => {
Â Â Â Â Â Â Â Â Â Â Â Â const player = players[playerName];

Â Â Â Â Â Â Â Â Â Â Â Â const card = document.createElement('div');
Â Â Â Â Â Â Â Â Â Â Â Â card.className = 'player-card';
Â Â Â Â Â Â Â Â Â Â Â Â card.innerHTML = `
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <strong>${playerName}</strong>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <br> Level ${player.level}, XP: ${player.xp}, Status: ${player.status}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <br><em>${player.sacredTitle}</em>
Â Â Â Â Â Â Â Â Â Â Â Â `;

Â Â Â Â Â Â Â Â Â Â Â Â if (player.status === "online") {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â card.style.color = "#00ff90";
Â Â Â Â Â Â Â Â Â Â Â Â } else if (player.status === "idle") {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â card.style.color = "#ffcc00";
Â Â Â Â Â Â Â Â Â Â Â Â } else {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â card.style.color = "#999";
Â Â Â Â Â Â Â Â Â Â Â Â }

Â Â Â Â Â Â Â Â Â Â Â Â playersContainer.appendChild(card);
Â Â Â Â Â Â Â Â });
Â Â Â Â });
}

// --- Fetch Active NPCs ---
function loadNPCs() {
Â Â Â Â const npcsRef = ref(db, 'sacredSystem/npcs');

Â Â Â Â onValue(npcsRef, (snapshot) => {
Â Â Â Â Â Â Â Â const npcs = snapshot.val();
Â Â Â Â Â Â Â Â npcsContainer.innerHTML = "";

Â Â Â Â Â Â Â Â if (!npcs) {
Â Â Â Â Â Â Â Â Â Â Â Â npcsContainer.innerHTML = `<p>No NPCs active...</p>`;
Â Â Â Â Â Â Â Â Â Â Â Â return;
Â Â Â Â Â Â Â Â }

Â Â Â Â Â Â Â Â Object.keys(npcs).forEach(npcName => {
Â Â Â Â Â Â Â Â Â Â Â Â const npc = npcs[npcName];
Â Â Â Â Â Â Â Â Â Â Â Â const card = document.createElement('div');
Â Â Â Â Â Â Â Â Â Â Â Â card.className = 'npc-card';
Â Â Â Â Â Â Â Â Â Â Â Â card.innerHTML = `<strong>${npcName}</strong> - ${npc.status || 'unknown'}`;
Â Â Â Â Â Â Â Â Â Â Â Â npcsContainer.appendChild(card);
Â Â Â Â Â Â Â Â });
Â Â Â Â });
}

// --- Fetch Active Raids ---
function loadRaids() {
Â Â Â Â const raidsRef = ref(db, 'sacredSystem/raids');

Â Â Â Â onValue(raidsRef, (snapshot) => {
Â Â Â Â Â Â Â Â const raids = snapshot.val();
Â Â Â Â Â Â Â Â raidsContainer.innerHTML = "";

Â Â Â Â Â Â Â Â if (!raids) {
Â Â Â Â Â Â Â Â Â Â Â Â raidsContainer.innerHTML = `<p>No raids active...</p>`;
Â Â Â Â Â Â Â Â Â Â Â Â return;
Â Â Â Â Â Â Â Â }

Â Â Â Â Â Â Â Â Object.keys(raids).forEach(raidName => {
Â Â Â Â Â Â Â Â Â Â Â Â const raid = raids[raidName];
Â Â Â Â Â Â Â Â Â Â Â Â const card = document.createElement('div');
Â Â Â Â Â Â Â Â Â Â Â Â card.className = 'raid-card';
Â Â Â Â Â Â Â Â Â Â Â Â card.innerHTML = `
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <strong>${raidName}</strong> 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <br>Status: ${raid.status || 'unknown'} 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <br>Players: ${raid.players || 0}
Â Â Â Â Â Â Â Â Â Â Â Â `;
Â Â Â Â Â Â Â Â Â Â Â Â raidsContainer.appendChild(card);
Â Â Â Â Â Â Â Â });
Â Â Â Â });
}

// --- Fetch Sacred Logs ---
function loadLogs() {
Â Â Â Â const logsRef = ref(db, 'sacredSystem/logs');

Â Â Â Â onValue(logsRef, (snapshot) => {
Â Â Â Â Â Â Â Â const logs = snapshot.val();
Â Â Â Â Â Â Â Â logsContainer.innerHTML = "";

Â Â Â Â Â Â Â Â if (!logs) {
Â Â Â Â Â Â Â Â Â Â Â Â logsContainer.innerHTML = `<p>No data yet...</p>`;
Â Â Â Â Â Â Â Â Â Â Â Â return;
Â Â Â Â Â Â Â Â }

Â Â Â Â Â Â Â Â // Show the 10 most recent logs
Â Â Â Â Â Â Â Â const logEntries = Object.values(logs)
Â Â Â Â Â Â Â Â Â Â Â Â .sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0))
Â Â Â Â Â Â Â Â Â Â Â Â .slice(0, 10);

Â Â Â Â Â Â Â Â logEntries.forEach(log => {
Â Â Â Â Â Â Â Â Â Â Â Â const card = document.createElement('div');
Â Â Â Â Â Â Â Â Â Â Â Â card.className = 'log-entry';
Â Â Â Â Â Â Â Â Â Â Â Â const time = log.timestamp 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â ? new Date(log.timestamp).toLocaleTimeString() 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â : 'Unknown';
Â Â Â Â Â Â Â Â Â Â Â Â card.innerHTML = `[${time}] ${log.message || JSON.stringify(log)}`;
Â Â Â Â Â Â Â Â Â Â Â Â logsContainer.appendChild(card);
Â Â Â Â Â Â Â Â });
Â Â Â Â });
}

// --- Load everything ---
loadPlayers();
loadNPCs();
loadRaids();
loadLogs();
